Bitwise Operators
Bitwise Operators are operators that
act on binary digits of whole numbers.

C supports 6 bitwise operators.
1) Left Shift Operator : <<
2) Right Shift Operator : >>
3) Ones Complement Operator : ~
4) Bitwise AND : &
5) Bitwise OR : |
6) Bitwise XOR : ^

1) Left Shift Operator : <<
--------------------------
<< is the left shift operator.
It is a binary operator i.e. it requires 2 values to act.

Syntax :
  newVal = operand << places;

It generates a new value binary digits
of which are generated by left shifiting
the binary digits of the first operand
by places specified by the second operand.

MSB equal to the value of second operand 
are lost.
Blanks created at LSB are autofilled with 
ZERO's.


2) Right Shift Operator : >>
--------------------------
>> is the right shift operator.
It is a binary operator i.e. it requires 2 values to act.

Syntax :
  newVal = operand >> places;

It generates a new value binary digits
of which are generated by right shifiting
the binary digits of the first operand
by places specified by the second operand.

LSB equal to the value of second operand 
are lost.
Blanks created at MSB are autofilled with 
ZERO's.

3) Ones Complement Operator : ~
-----------------------------
~ is the ones complement operator.
It is a unary operator i.e. it requires 1 value to act.

Syntax :
  newVal = ~operand;

It generates a new value binary digits
of which are generated by reversing
the binary digits of the operand.
All 0 bits turn 1 and all 1 bits turn 0.

4) Bitwise AND : &
------------------
& is the Bitwise AND operator.
It is a binary operator i.e. it requires 2 values to act.

Syntax :
  newVal = operand1 & operand2;

It generates a new value binary digits
of which are generated by AND MASKING
the binary digits of first and second operand.

For AND MASKING following table is used:
 
 1 & 1 = 1
 1 & 0 = 0
 0 & 1 = 0
 0 & 0 = 0

5) Bitwise OR : |
------------------
| is the Bitwise OR operator.
It is a binary operator i.e. it requires 2 values to act.

Syntax :
  newVal = operand1 | operand2;

It generates a new value binary digits
of which are generated by OR MASKING
the binary digits of first and second operand.

For OR MASKING following table is used:
 
 1 | 1 = 1
 1 | 0 = 1
 0 | 1 = 1
 0 | 0 = 0

6) Bitwise XOR : ^
------------------
^ is the Bitwise XOR operator.
It is a binary operator i.e. it requires 2 values to act.

Syntax :
  newVal = operand1 ^ operand2;

It generates a new value binary digits
of which are generated by XOR MASKING
the binary digits of first and second operand.

For XOR MASKING following table is used:
 
 1 ^ 1 = 0
 1 ^ 0 = 1
 0 ^ 1 = 1
 0 ^ 0 = 0
